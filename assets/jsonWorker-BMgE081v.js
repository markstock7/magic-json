(function(){"use strict";const r=o=>new Blob([o]).size,y=(o,n=0)=>{let t={depth:n,keyCount:0,arrayCount:0,objectCount:0,byteSize:0};if(Array.isArray(o))t.arrayCount++,o.forEach(s=>{if(typeof s=="object"&&s!==null){const e=y(s,n+1);t={depth:Math.max(t.depth,e.depth),keyCount:t.keyCount+e.keyCount,arrayCount:t.arrayCount+e.arrayCount,objectCount:t.objectCount+e.objectCount,byteSize:t.byteSize+e.byteSize}}else typeof s=="string"&&(t.byteSize+=r(s))});else if(typeof o=="object"&&o!==null){t.objectCount++;const s=Object.keys(o);t.keyCount+=s.length,s.forEach(e=>{t.byteSize+=r(e)}),Object.values(o).forEach(e=>{if(typeof e=="object"&&e!==null){const a=y(e,n+1);t={depth:Math.max(t.depth,a.depth),keyCount:t.keyCount+a.keyCount,arrayCount:t.arrayCount+a.arrayCount,objectCount:t.objectCount+a.objectCount,byteSize:t.byteSize+a.byteSize}}else typeof e=="string"&&(t.byteSize+=r(e))})}return t},c=o=>{if(o===0)return"0 Bytes";const n=1024,t=["Bytes","KB","MB","GB"],s=Math.floor(Math.log(o)/Math.log(n));return parseFloat((o/Math.pow(n,s)).toFixed(2))+" "+t[s]};self.addEventListener("message",o=>{try{const n=o.data,t=JSON.parse(n),s=JSON.stringify(t,null,2),e=y(t),a=r(n);self.postMessage({success:!0,data:{formatted:s,stats:{size:n.length,...e,byteSize:a,formattedByteSize:c(a)}}})}catch(n){self.postMessage({success:!1,error:n.message})}})})();
